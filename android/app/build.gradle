def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'kotlin-android'
// apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 34
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "br.com.claudneysessa.flutter_catalog"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Add this line to resolve "unable to merge dex" error, c.f.
        // https://github.com/flutter/flutter/issues/14874.
        multiDexEnabled true
        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
    }
    dexOptions {
        preDexLibraries = false
    }

    // signingConfigs {
    // release {
    //   def keystoreProperties = new Properties()
    //   def keystorePropertiesFile = rootProject.file('key.properties')
    //   if (keystorePropertiesFile.exists()) {
    //       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    //       keyAlias keystoreProperties['keyAlias']
    //       keyPassword keystoreProperties['keyPassword']
    //       storeFile file(keystoreProperties['storeFile'])
    //       storePassword keystoreProperties['storePassword']
    //   }
    // }
    // }

    buildTypes {
        release {
            // Add multidex-config.pro and this line to void multidex problem
            // for API version <21.
            // Cf. https://developer.android.com/studio/build/multidex#keep.
            multiDexKeepProguard file('multidex-config.pro')
            //signingConfig signingConfigs.release
            // Enable symbolicated native crash stack traces, cf.
            // https://developer.android.com/studio/build/shrink-code#android_gradle_plugin_version_41_or_later
            ndk {
              debugSymbolLevel 'FULL'
            }
            shrinkResources true
            minifyEnabled true
            // useProguard true // https://stackoverflow.com/a/71760565/12421326
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

// ! ðŸš§ temp solution for firestore bug.
// see https://github.com/firebase/flutterfire/issues/8501#issuecomment-1107883048
configurations.all {
    resolutionStrategy {
        force 'com.squareup.okhttp:okhttp:2.7.5'
        force 'com.squareup.okio:okio:1.17.5'
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.exifinterface:exifinterface:1.3.6"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    // Cf. https://developers.google.com/admob/android/quick-start.
    implementation 'com.google.android.gms:play-services-ads:21.3.0'
    implementation 'com.google.ads.mediation:adcolony:4.8.0.0'
    implementation 'com.google.ads.mediation:facebook:6.12.0.0'
    // Cf. https://firebase.google.com/docs/android/setup#add-sdks.
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation('com.google.firebase:firebase-auth') {
        // For safty net issue, cf. https://flutter-developer.medium.com/fixed-reported-critical-issues-with-version-17-0-0-google-play-warning-46c8fa9d5526
        exclude module: "play-services-safetynet"
    }
    implementation 'com.google.firebase:firebase-firestore'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'